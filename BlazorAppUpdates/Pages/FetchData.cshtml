@page "/fetchdata"
@inject HttpClient Http

<h1>Twitch Streams - Programming</h1>
<button onclick="@Refresh" class="btn btn-primary">Refresh</button>
@if (streams == null)
{
    <p><em>You need to refresh by clicking the button above...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Streamer / Title</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var stream in streams)
            {
                <tr>
                    <td><a href='@($"https://twitch.tv/{stream.user_name}")' target="_blank"><h4>@stream.user_name</h4> <em>@stream.title</em></a></td>
                </tr>
            }
        </tbody>
    </table>
}

@functions {
  Datum[] streams;

  async Task Refresh()
  {
      Http.DefaultRequestHeaders.Add("client-id", "");
      var response = await Http.GetJsonAsync<TwitchStreams>("https://api.twitch.tv/helix/streams?game_id=509670&tag_id=a59f1e4e-257b-4bd0-90c7-189c3efbf917");
      streams = response.data;
  }

  public class TwitchStreams
  {
      public Datum[] data { get; set; }
      public Pagination pagination { get; set; }
  }

  public class Pagination
  {
      public string cursor { get; set; }
  }

  public class Datum
  {
      public string id { get; set; }
      public string user_id { get; set; }
      public string user_name { get; set; }
      public string game_id { get; set; }
      public string[] community_ids { get; set; }
      public string type { get; set; }
      public string title { get; set; }
      public int viewer_count { get; set; }
      public DateTime started_at { get; set; }
      public string language { get; set; }
      public string thumbnail_url { get; set; }
      public string[] tag_ids { get; set; }
  }

}
